
'''
    프로그래머스 점프와 순간 이동

    규칙에 따른 순간이동 기능과 배터리를 소모하며 앞으로 가는 기능이 있을때
    목표지점까지 최소한의 배터리 사용량을 구하는 문제
'''


def solution(n):

    '''
        나의 풀이

        나의 접근법
        처음에 문제 보고 
        경우의 수가 순간이동 하는 거랑 앞으로 가는거 밖에 없길래
        DFS 해야지 했는데
        목표지점이 최대 10억이라서 포기함 ㅋㅋ

        그래서 뭘해야할지 모르겠어서 이진탐색으로 해야하나? 싶었는데
        뭔가 이것도 아니고 DP도 절대 안될 것 같아서 그러고 있었는데
        보니까 순간이동이 현재 위치에서 곱하기 2를 하는거여서
        약간 탐욕스럽게 하면 될 것 같았음

        그래서 목표지점에서 출발지로 순간이동을 하는데
        짝수가 아니면 배터리를 사용해서 짝수로 이동하는 방식으로 하니까 풀림..

        고민한거에 비해 문제가 너무 쉽게 풀린듯 ㅋㅋㅋㅋㅋ
    '''

    ans = 0

    now_n = n
    while now_n > 0:

        if now_n % 2 == 0:
            now_n //= 2
        else:
            ans += 1
            now_n -= 1

    return ans

print(solution(5000))



def firstSolu(n):

    '''
        다른 사람 풀이
        프로그래머스 다른 사람 풀이
        https://school.programmers.co.kr/learn/courses/30/lessons/12980/solution_groups?language=python3

        2를 계속 나누는게 오른쪽으로 한칸씩 이동시키는 거라서
        그 중에 1이 있으면 홀수인거 

        대충 이거 원리 한거 같은데 잘 모르겠음ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
        

    '''

    return bin(n).count('1')