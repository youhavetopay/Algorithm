
'''
    프로그래머스 땅따먹기
    한 행씩 내려오면서 해당 칸의 점수를 얻는데
    같은 열을 연속으로 밟지 않고 끝까지 내려왔을때 얻는 최대 점수 계산하는 문제
'''

def solution(land):

    '''
        나의 풀이

        나의 접근법
        최근에 백준에서 RGB 거리라는 문제를 풀었는데
        이 문제랑 똑같은 문제라서 그렇게 어렵지 않게 품 ㅋㅋ
        차이점이라면 열 하나가 더 늘어난 정도?? 

        현재 열을 선택한다면 이전에서는 해당 열을 제외하고 최대값이랑 더해주면 됨
        전형적인 DP 문제 ㅋㅋ
    '''

    dp = [[land[0][0], land[0][1], land[0][2], land[0][3]]]

    for i in range(1, len(land)):

        a = land[i][0] + max(dp[-1][1], dp[-1][2], dp[-1][3])
        b = land[i][1] + max(dp[-1][0], dp[-1][2], dp[-1][3])
        c = land[i][2] + max(dp[-1][0], dp[-1][1], dp[-1][3])
        d = land[i][3] + max(dp[-1][0], dp[-1][1], dp[-1][2])

        dp.append([a, b, c, d])

    for row in dp:
        print(row)
    return max(dp[-1])

print(solution([
    [4, 3, 2, 1], 
    [2, 2, 2, 1], 
    [6, 6, 6, 4], 
    [8, 7, 6, 5]]))